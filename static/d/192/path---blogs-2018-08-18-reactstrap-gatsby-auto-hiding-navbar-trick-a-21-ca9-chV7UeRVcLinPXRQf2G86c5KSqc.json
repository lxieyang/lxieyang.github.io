{"data":{"markdownRemark":{"html":"<h3>Disclaimer</h3>\n<p>First things first, I do not claim to be an <a href=\"https://reactjs.org\">React</a>/<a href=\"https://www.gatsbyjs.org\">Gatsby</a> expert. The following content is just something I figured out by trial-and-error and would like to document / share with other <a href=\"https://reactjs.org\">React</a>/<a href=\"https://www.gatsbyjs.org\">Gatsby</a> hackers.</p>\n<h3>Problem Description</h3>\n<p>See the nice auto-hiding Navbar on this site? That took me a while to implement. Not that it's a difficult task, but it's was rediculously hard to make it perform correctly (or shall I say, elegantly) across browsers/platforms. Basically, I want it to <strong>auto-hide when you are scrolling down, and auto-reveal when you are scrolling up</strong>. Every bit of srenn real estate matters, especially in a mobile-first world.</p>\n<p>First let's get some context out of the way: I'm using bootstrap with React, so Reactstrap is the default way to go. You could either have a <em>fixed</em> navbar or a <em>non-fixed</em> one, but not an <em>auto-hiding/auto-revealing</em> one. If you ever have found yourself typing something like \"reactstrap auto hiding navbar\" into Google, you're probably in a similar situation. Fortunately, there are many hacks that sort of works available as open-source. However, since you are using React, you probably don't want to mix any jQuery stuff into your code (my take is you really shouldn't), so packages written with jQuery like <a href=\"https://www.virtuosoft.eu/code/bootstrap-autohidingnavbar/\">Bootstrap Auto-Hiding Navbar</a> are out of consideration. And unfortunately, that rules out almost all of them. </p>\n<h3>The Solution</h3>\n<p>I tested out a couple of solutions. One of them works <em>almost</em> perfectly for me, which is available at <a href=\"https://www.w3schools.com/howto/howto_js_navbar_hide_scroll.asp\">How TO - Hide Menu on Scroll - W3Schools.com</a>. If you try it out in Chrome or Firefox, it works like a charm, which concluded my first attempt to build this fancy navbar. </p>\n<p>However, if you happen to be using Safari on a Mac, problems starts to reveal. And it sucks a lot: when you scroll to the very bottom, the navbar will \"magically\" reveal itself; when you scroll back to the very top, the navbar will \"magically\" disappear. Something like the following:</p>\n<p><img alt=\"scroll-down\" style=\"max-width: 400px\" src=\"/scrolling-down-hit-bottom-safari-d5de5310e1576412083de40ac0658ccb.gif\"> <img alt=\"scroll-down\" style=\"max-width: 400px\" src=\"/scrolling-up-hit-top-safari-60742fb022e99a5f72b023b7e3b3b238.gif\"></p>\n<p>And this undersirable effect also applys to mobile browsing using Safari.</p>\n<h3>The Ultimate Solution</h3>\n<p>The cause of this effect is that Safari allows \"over-scroll\" and will display a bouncy effect once you do so. I'm guessing it's a UX sugar? Anyway, in this case, it's super annoying.</p>\n<p>To resolve this, you have to carefully come up with edge fixes for Safari. Here's what I end up putting in my <code class=\"language-text\">./src/components/header/header.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascrpt\"><pre class=\"language-javascrpt\"><code class=\"language-javascrpt\">import React, { Component } from &#39;react&#39;;\nimport &#39;./header.css&#39;;\nimport {\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n} from &#39;reactstrap&#39;;\n\n...\n\n\nconst ListLink = (props) =&gt; (\n  &lt;NavItem style={{marginBottom: &#39;0&#39;}}&gt;\n    &lt;div className=&quot;navlink&quot;&gt;\n      &lt;Link to={props.route} activeClassName=&quot;active&quot;&gt;\n        {props.routeName}\n      &lt;/Link&gt;\n    &lt;/div&gt;\n  &lt;/NavItem&gt;\n);\n\nclass Header extends Component {\n  constructor (props) {\n    super(props);\n    this.toggle = this.toggleNavbar.bind(this);\n\n    // https://www.w3schools.com/howto/howto_js_navbar_hide_scroll.asp\n    if (typeof window !== &#39;undefined&#39;) {\n      let prevScrollpos = window.pageYOffset;\n      window.onscroll = function () {\n        const maxScroll = document.body.clientHeight - window.innerHeight;\n        let currentScrollPos = window.pageYOffset;\n        if (\n            (maxScroll &gt; 0 &amp;&amp; prevScrollpos &gt; currentScrollPos &amp;&amp; prevScrollpos &lt;= maxScroll) \n          || (maxScroll &lt;= 0 &amp;&amp; prevScrollpos &gt; currentScrollPos)\n          || (prevScrollpos &lt;= 0 &amp;&amp; currentScrollPos &lt;= 0)\n          ) {\n          document.getElementById(&quot;navbar&quot;).style.top = &quot;0&quot;;\n        } else {\n          document.getElementById(&quot;navbar&quot;).style.top = &quot;-5.0rem&quot;;\n        }\n        prevScrollpos = currentScrollPos;\n      }\n    }\n  }\n\n  state = {\n    isOpen: false\n  }\n\n  toggleNavbar() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render () {\n    // active class name\n    // https://spectrum.chat/thread/b698900b-cea6-44f8-8f35-d7015365ff18\n    // reactstrap navbar\n    // https://codepen.io/FreeClimb/pen/evVJzo?editors=0110\n    // https://reactstrap.github.io/components/navbar/\n    return (\n      &lt;div style={{fontSize: &#39;1.2rem&#39;}}&gt;\n        &lt;Navbar id=&quot;navbar&quot; color=&quot;light&quot; light expand=&quot;md&quot; fixed=&quot;top&quot;&gt; \n          &lt;Container&gt;\n            &lt;div className=&quot;navbarbrand&quot;&gt;\n              &lt;Link to={appRoutes.home}&gt;\n                &lt;img src={HeaderImg} width=&quot;30&quot; height=&quot;30&quot; className=&quot;d-inline-block align-top&quot; alt=&quot;profile&quot; style={{marginBottom: &#39;0&#39;}}/&gt; &amp;nbsp;\n                {this.props.siteTitle}\n              &lt;/Link&gt;\n            &lt;/div&gt;\n            &lt;NavbarToggler className=&quot;mr-2&quot; onClick={this.toggle} /&gt;\n            &lt;Collapse isOpen={this.state.isOpen} navbar&gt;\n              &lt;Nav className=&quot;ml-auto&quot; navbar&gt;\n                &lt;ListLink route={appRoutes.home} routeName={&#39;Home&#39;}/&gt;\n                &lt;ListLink route={appRoutes.research} routeName={&#39;Research&#39;}/&gt;\n                &lt;ListLink route={appRoutes.experiences} routeName={&#39;Experiences&#39;}/&gt;\n                &lt;ListLink route={appRoutes.blogs} routeName={&#39;Blogs&#39;}/&gt;\n                &lt;ListLink route={appRoutes.about} routeName={&#39;About&#39;}/&gt;\n              &lt;/Nav&gt;\n            &lt;/Collapse&gt;\n          &lt;/Container&gt;\n        &lt;/Navbar&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n\nexport default Header;</code></pre></div>","frontmatter":{"title":"Reactstrap/Gatsby Auto-hiding Navbar Trick","date":"2018-08-18"}}},"pageContext":{"slug":"/blogs/2018-08-18-reactstrap-gatsby-auto-hiding-navbar-trick/"}}
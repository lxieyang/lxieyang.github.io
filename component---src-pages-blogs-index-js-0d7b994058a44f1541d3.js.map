{"version":3,"sources":["webpack:///./src/pages/blogs/index.js"],"names":["ChronologicalBlogList","_ref","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","edges","map","_ref2","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","frontmatter","title","style","color","fontSize","date","excerpt","Banner","_ref3","display","flexWrap","alignItems","justifyContent","fontStyle","totalCount","BlogsPage","render","this","props","data","_components_layout_layout__WEBPACK_IMPORTED_MODULE_4__","pathName","Component","query"],"mappings":"mMAMMA,EAAwB,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,kBAC/B,OAA0B,OAAtBA,EACK,KAIPC,EAAAC,EAAAC,cAAA,WAEIH,EAAkBI,MAAMC,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAC7B,OACEN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAKE,IACbR,EAAAC,EAAAC,cAACO,EAAA,KAAD,CAAMC,GAAIJ,EAAKK,OAAOC,MACpBZ,EAAAC,EAAAC,cAAA,UACGI,EAAKO,YAAYC,QAGtBd,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CACVC,MAAO,OACPC,SAAU,WAETX,EAAKO,YAAYK,MAEpBlB,EAAAC,EAAAC,cAAA,SAAII,EAAKa,cAUjBC,EAAS,SAAAC,GAA2B,IAAxBtB,EAAwBsB,EAAxBtB,kBAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CACVO,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,eAAgB,kBAEhBzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAEFF,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CAACW,UAAW,WAEE,OAAtB3B,EACEC,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,UACGH,EAAkB4B,WADrB,QAEI5B,EAAkB4B,WAAa,EAAI,IAAM,SASnDC,4FACJC,kBAAU,IAEA9B,EADS+B,KAAKC,MAAdC,KACAjC,kBAER,OACEC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQC,SAAS,SACflC,EAAAC,EAAAC,cAACkB,EAAD,CAAQrB,kBAAmBA,IAC3BC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACL,EAAD,CAAuBE,kBAAmBA,SAT1BoC,aAeTP,YAGR,IAAMQ,EAAK","file":"component---src-pages-blogs-index-js-0d7b994058a44f1541d3.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../../components/layout/layout';\n\n\nconst ChronologicalBlogList = ({ allMarkdownRemark }) => {\n  if (allMarkdownRemark === null) {\n    return null;\n  }\n\n  return (\n    <div>\n      {\n        allMarkdownRemark.edges.map(({ node }) => {\n          return (\n            <div key={node.id}>\n              <Link to={node.fields.slug}>\n                <h3>\n                  {node.frontmatter.title}\n                </h3>\n              </Link>\n              <div style={{\n                color: '#bbb',\n                fontSize: '0.8rem'\n              }}>\n                {node.frontmatter.date}\n              </div>\n              <p>{node.excerpt}</p>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n\n\nconst Banner = ({ allMarkdownRemark }) => {\n  return (\n    <div style={{\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }}>\n      <div>\n        <h1>Blogs</h1>\n      </div>\n      <div style={{fontStyle: 'italic'}}>\n        {\n          allMarkdownRemark === null \n          ? <h5>Diligently writing...</h5>\n          : <h5>\n              {allMarkdownRemark.totalCount} Post{\n                allMarkdownRemark.totalCount > 1 ? 's' : null\n              }\n            </h5>\n        }\n      </div>\n    </div>\n  );\n}\n\nclass BlogsPage extends Component {\n  render () {\n    const { data } = this.props;\n    const { allMarkdownRemark } = data;\n\n    return (\n      <Layout pathName=\"Blogs\">\n        <Banner allMarkdownRemark={allMarkdownRemark}/>\n        <br/>\n        <ChronologicalBlogList allMarkdownRemark={allMarkdownRemark}/>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogsPage;\n\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { \n        frontmatter: { \n          published: { eq: true },\n          under: {eq: \"blogs\" }\n        } \n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            published\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}